# some move function test of grid traverse for HW01 of Principles of Computing Coursera class
# @selfkorg@ 



import random



GRID_HEIGHT = 4
GRID_WIDTH = 4

EXAMPLE_GRID=[[1, 2, 3, 4], [2, 2, 2, 4], [2, 2, 2, 4], [2, 2, 2, 4]]

for line in EXAMPLE_GRID:
    print line
    
    
print 
    

temp_grid=[[0 for i in range(4)]for j in range(4)]

for line in temp_grid:
    print line

print     
    
    
def traverse_grid(start_cell, direction, num_steps):
    
    extract_lst=[]
    
     
    for step in range(num_steps):        
        row = start_cell[0] + step * direction[0]
        col = start_cell[1] + step * direction[1]
        extract_lst.append(EXAMPLE_GRID[row][col])
        
        
        #print "Processing cell", (row, col), 
        #print "with value", EXAMPLE_GRID[row][col]
    
    return extract_lst


def run_example():
   

    new_left=[]
    
    for i in range(GRID_WIDTH):
       
        #print "the "+str(i)+" line"
        new_left.append(merge(traverse_grid((i, 0), (0, 1), GRID_WIDTH)))
    
    for i in new_left:
        print i

    print    
    
    
    
    # when move in right direction
    new_right=[]    
    for i in range(GRID_WIDTH):
        
        new_right.append(merge(traverse_grid((i, GRID_WIDTH-1), (0, -1), GRID_WIDTH)))
    
    # when move in up direction
    new_up=[]
    temp_up=[]
    for i in range(GRID_WIDTH):
        new_up.append(merge(traverse_grid((0, i), (1, 0), GRID_HEIGHT)))
        
    #print new_up
    print "the following is a new_up matrix"
    for line in new_up:
        print line
    
    for col in range(GRID_WIDTH):
        for row in range(GRID_HEIGHT):
            temp_grid[row][col]=new_up[col][row]
    
    print
    
    print "test for correction of new_up "
    for line in temp_grid:
        print line
    
    
    print 
    print "the following is a new_down matrix"
    #print new_down 
    new_down=[]
    for i in range(GRID_WIDTH):
        new_down.append(merge(traverse_grid((GRID_HEIGHT-1, i), (-1, 0), GRID_HEIGHT)))
    
    for line in new_down:
        print line
        
    for col in range(GRID_WIDTH):
        for row in range(GRID_HEIGHT):
            temp_grid[row][col]=new_down[col][GRID_WIDTH-row-1]        
    print 
    print "test for correction of new_down"
    for line in temp_grid:
        print line
    

def merge(line):
    """
    Function that merges a single row or column in 2048.
    """
   
    
    new_lst1=[]
    result=[]
    
    for dummy_1 in line:
        if dummy_1 != 0:
            new_lst1.append(dummy_1)
       
    
    
    for dummy_2 in range(0, len(new_lst1)-1, 1):
        
        if (new_lst1[dummy_2]==new_lst1[dummy_2 + 1]):
            new_lst1[dummy_2]=new_lst1[dummy_2]+new_lst1[dummy_2+1]
            new_lst1[dummy_2+1]=0
            
        
    for dummy_3 in new_lst1:
        if dummy_3!=0:
            result.append(dummy_3)
            
    while (len(result)<len(line)):
        result.append(0)
       
    
    return result    
    
    
    
    
run_example()    

